<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.geekidea.springboot.assembly.demo.dao.StrategyMapper">
    <resultMap id="BaseResultMap" type="io.geekidea.springboot.assembly.demo.entity.Strategy">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="case_scene" property="caseScene" jdbcType="VARCHAR"/>
        <result column="rule_url" property="ruleUrl" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="scene_type" property="sceneType" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="modifier" property="modifier" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, description, case_scene, rule_url, type, scene_type, creator, modifier, status, create_time,
        modify_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        id, name, description, case_scene, rule_url, type, scene_type, creator, modifier, status, create_time,
        modify_time
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from strategy
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="io.geekidea.springboot.assembly.demo.entity.Strategy">
        insert into `strategy` (`id`, `name`, `description`,
        `case_scene`, `rule_url`, `type`,
        `scene_type`, `creator`, `modifier`,
        `status`, `create_time`, `modify_time`
        )
        values (#{id}, #{name}, #{description},
        #{caseScene}, #{ruleUrl}, #{type},
        #{sceneType}, #{creator}, #{modifier},
        #{status}, now(), now()
        )
    </insert>
    <insert id="insertSelective" parameterType="io.geekidea.springboot.assembly.demo.entity.Strategy">
        insert into strategy
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="description != null">
                `description`,
            </if>
            <if test="caseScene != null">
                `case_scene`,
            </if>
            <if test="ruleUrl != null">
                `rule_url`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="sceneType != null">
                `scene_type`,
            </if>
            <if test="creator != null">
                `creator`,
            </if>
            <if test="modifier != null">
                `modifier`,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                `create_time`,
            </if>
            <if test="modifyTime != null">
                `modify_time`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="caseScene != null">
                #{caseScene},
            </if>
            <if test="ruleUrl != null">
                #{ruleUrl},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="sceneType != null">
                #{sceneType},
            </if>
            <if test="creator != null">
                #{creator},
            </if>
            <if test="modifier != null">
                #{modifier},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="modifyTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="io.geekidea.springboot.assembly.demo.entity.Strategy">
        update `strategy`
        <set>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="description != null">
                `description` = #{description},
            </if>
            <if test="caseScene != null">
                `case_scene` = #{caseScene},
            </if>
            <if test="ruleUrl != null">
                `rule_url` = #{ruleUrl},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="sceneType != null">
                `scene_type` = #{sceneType},
            </if>
            <if test="creator != null">
                `creator` = #{creator},
            </if>
            <if test="modifier != null">
                `modifier` = #{modifier},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="createTime != null">
                `create_time` = now(),
            </if>
            <if test="modifyTime != null">
                `modify_time` = now(),
            </if>
        </set>
        where id = #{id}
    </update>


    <select id="selectBySelective" resultMap="BaseResultMap" parameterType="io.geekidea.springboot.assembly.demo.entity.Strategy">
        select
        id, name, description, case_scene, rule_url, type, scene_type, creator, modifier, status, create_time,
        modify_time
        from strategy
        where status=1
        <if test="modifier != null and modifier !='' ">
            and modifier = '${modifier}'
        </if>
        <if test="type != null ">
            and type = ${type}
        </if>

    </select>






</mapper>